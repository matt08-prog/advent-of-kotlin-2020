import java.io.File
import java.lang.Double.parseDouble

var alreadyChecked:ArrayList<Int> = arrayListOf()
var alreadyChanged:ArrayList<Int> = arrayListOf()
var changedIndex = 0
var list:MutableList<String> = ArrayList()

var acc = 0
var index = 0
var looping = false
var correct = false
var once = true
var cont = true

fun readFileLineByLineUsingForEachLine(fileName: String) {
    File(fileName).forEachLine { list.add(it.toString()) }
}
fun main(args: Array<String>) {

    readFileLineByLineUsingForEachLine("src/input.txt")


    list.forEach {
        println(it)
    }

    println("\n")

    while(correct == false) {
        val instruction = runLine(list[index])
        //println(instruction)
    }
}


fun runLine(instruction: String) {
    if(index == list.size - 1)
    {
        correct = true
    }
    if(alreadyChecked.indexOf(index) > -1)
    {

        if(alreadyChanged.size > 0)
        {
            println("*************${ list[alreadyChanged[alreadyChanged.size - 1]] }******************")
            if (list[alreadyChanged[alreadyChanged.size-1]].substring(0,3) == "jmp")
            {
                println("replaceing ${list[alreadyChanged[alreadyChanged.size-1]]}")
                list[alreadyChanged[alreadyChanged.size-1]] = list[alreadyChanged[alreadyChanged.size-1]].replaceRange(0,3,"nop")
                println("replaced jmp with nop")
            }
            else if (list[alreadyChanged[alreadyChanged.size-1]].substring(0,3) == "nop")
            {
                println("replaceing ${list[alreadyChanged[alreadyChanged.size-1]]}")
                list[alreadyChanged[alreadyChanged.size-1]] = list[alreadyChanged[alreadyChanged.size-1]].replaceRange(0,3,"jmp")
                println("replaced nop with jmp")
            }
        }

        list.forEach {
            if (it.substring(0, 3) == "jmp" && alreadyChanged.indexOf(list.indexOf(it)) <= -1) {
                var replaced = list[list.indexOf(it)].replaceRange(0, 3, "nop")
                changedIndex = list.indexOf(it)
                list[list.indexOf(it)] = list[list.indexOf(it)].replaceRange(0, 3, "nop")
                index = 0
                acc=0
                alreadyChecked = arrayListOf<Int>()
                alreadyChanged.add(changedIndex)
//                println(alreadyChanged)
//                list.forEach{
//                    println(it)
//                }
                return
            } else if (it.substring(0, 3) == "nop" && alreadyChanged.indexOf(list.indexOf(it)) <= -1) {
                var replaced = list[list.indexOf(it)].replaceRange(0, 3, "jmp")
                changedIndex = list.indexOf(it)
                list[list.indexOf(it)] = list[list.indexOf(it)].replaceRange(0, 3, "jmp")
                index = 0
                acc=0
                alreadyChecked = arrayListOf<Int>()
                alreadyChanged.add(changedIndex)
//                println(alreadyChanged)
//                list.forEach{
//                    println(it)
//                }
                return
            }
        }
    }

    alreadyChecked.add(index)
    when (instruction.substring(0,3))
    {
        "nop" -> {
            index++
            return
        }
        "acc" -> {
            if(instruction.substring(4,5) == "+")
            {
                acc += instruction.substring(5,instruction.length).toInt()
            }
            else
            {
                acc -= instruction.substring(5,instruction.length).toInt()
            }
            index++
        }
        "jmp" -> {
            if(instruction.substring(4,5) == "+")
            {
                index += instruction.substring(5,instruction.length).toInt()
            }
            else
            {
                index -= instruction.substring(5,instruction.length).toInt()
            }

        }
    }
    if (correct)
    {
        println("acc = $acc")
//        list.forEach {
//            println(it)
//        }
        return
    }
    //println("acc = $acc")
}

